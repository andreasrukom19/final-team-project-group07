{"version":3,"file":"static/js/242.d4b2a2f5.chunk.js","mappings":"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","sources":["schemas/schemas.js","Pages/SignIn/SignIn.styled.jsx","Pages/SignIn/SignIn.jsx","styles/theme.jsx"],"sourcesContent":["import * as yup from 'yup';\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const signInSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Min length 8')\n    .max(64, 'Max length 64')\n    .required(),\n});\n","import styled from 'styled-components';\nimport { theme } from '../../styles/theme';\n\nexport const Label = styled.label`\n  font-size: 18px;\n  line-height: calc(24 / 18);\n  color: ;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  width: 100%;\n`;\nexport const SignInTitle = styled.h2`\n  font-size: ;\n  line-height: 1.23em;\n  font-weight: 500;\n  color: ;\n`;\n\nexport const Error = styled.p`\n  font-size: 14px;\n  line-height: 1.28em;\n  color: ${theme.colors.secondaryRed};\n`;\n\nexport const EmailInput = styled.input`\n  font-size: 16px;\n  padding: 11px 10px;\n  line-height: 1.25em;\n  border-radius: 6px;\n  width: 100%;\n  color: ${theme.colors.primaryAccent};\n  border: 1px solid ${theme.colors.secondaryGray};\n  font-family: inherit;\n\n  &:focus {\n    outline: none;\n  }\n  &::placeholder {\n    color: ${theme.colors.secondaryBlue};\n  }\n  &:not(:placeholder-shown):invalid {\n    color: ${theme.colors.secondaryRed};\n    border-color: ${theme.colors.secondaryRed};\n  }\n  ${props =>\n    props.$error\n      ? {\n          color: 'red',\n          borderColor: 'red',\n          '&::placeholder': { color: 'red' },\n        }\n      : null}\n`;\n\nexport const Button = styled.button`\n  width: 280px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  border: none;\n  color: ${theme.colors.primaryWhite};\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.33em;\n  background-color: ${theme.colors.primaryBlue};\n  font-family: @media screen and (min-width: 768px) {\n    font-size: 18px;\n    width: 336px;\n    height: 44px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n    height: 44px;\n  }\n`;\nexport const SignInForm = styled.form`\n  gap: 16px;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n    margin-right: 104px;\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n// import { UseDispatch } from 'react-redux';\nimport { signInSchema } from 'schemas/schemas';\nimport {\n  Label,\n  SignInTitle,\n  EmailInput,\n  Error,\n  Button,\n  SignInForm,\n} from './SignIn.styled';\n\nfunction Signin() {\n  // const dispatch = useDispatch();\n  // const isLoading = useSelector(isLoading);\n\n  // const onSubmit = e => {\n  //   dispatch(signInThunk(e));\n  // };\n\n  const { values, touched, errors, handleSubmit, handleChange, handleBlur } =\n    useFormik({\n      initialValues: {\n        email: '',\n        password: '',\n      },\n      validationSchema: signInSchema,\n      // onSubmit,\n    });\n  return (\n    <>\n      <SignInForm onSubmit={handleSubmit}>\n        <SignInTitle>Sign in</SignInTitle>\n        <Label>\n          Enter email\n          <EmailInput\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Email\"\n            $error={touched.email && errors.email}\n          />\n          {touched.email && errors.email && <Error>{errors.email}</Error>}\n        </Label>\n        <Label>\n          Enter password\n          <input\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder=\"Password\"\n            $error={touched.password && errors.password}\n          />\n          {touched.password && errors.password && (\n            <Error>{errors.password}</Error>\n          )}\n        </Label>\n        <Button type=\"submit\">Sign in</Button>\n      </SignInForm>\n      <Link to=\"/signup\">Signup</Link>\n    </>\n  );\n}\n\nexport default Signin;\n","export const theme = Object.freeze({\n  colors: {\n    primaryWhite: '#FFFFFF',\n    primaryBlack: '#2F2F2F',\n    primaryBlue: '#407BFF',\n    secondaryGray: '#ECF2FF',\n    secondaryRed: '#EF5050',\n    secondaryBlue: '#9EBBFF',\n    secondaryOrange: '#FF9D43',\n    secondaryGrayBlue: '#D7E3FF',\n  },\n\n  fonts: {\n    body: 'Roboto, sans-serif',\n  },\n\n  fontSizes: {\n    mainTitle: '36px',\n    subtitle: '26px',\n    listTitle: '18px',\n    text: '16px',\n    info: '12px',\n  },\n\n  fontWeights: {\n    bold: 700,\n    medium: 600,\n    regular: 400,\n  },\n\n  lineHeights: {\n    mainTitle: 1.17,\n    subtitle: 1.2,\n    listTitle: 1.1,\n    text: 1.25,\n    info: 1.33,\n  },\n\n  shadows: {\n    normalButton: '0px 4px 8px 0px rgba(64, 123, 255, 0.34)',\n    hoverButton: '0px 4px 14px 0px rgba(64, 123, 255, 0.54)',\n    statsFrame: '0px 4px 4px 0px rgba(64, 123, 255, 0.30)',\n    userModal: '0px 4px 8px 0px rgba(64, 123, 255, 0.20)',\n    normaFrame: '0px 4px 8px 0px rgba(158, 187, 255, 0.12)',\n    wrapper: '0px 4px 14px 0px rgba(64, 123, 255, 0.30)',\n  },\n\n  border: {\n    normal: '1px solid #407BFF',\n    secondary: '1px solid #9EBBFF',\n  },\n\n  radii: {\n    round: '50%',\n    medium: '40px',\n    normal: '10px',\n  },\n});\n"],"names":["signInSchema","yup","shape","email","matches","required","password","min","max","Label","styled","_templateObject","_taggedTemplateLiteral","SignInTitle","_templateObject2","Error","_templateObject3","theme","EmailInput","_templateObject4","props","$error","color","borderColor","Button","_templateObject5","SignInForm","_templateObject6","_useFormik","useFormik","initialValues","validationSchema","values","touched","errors","handleSubmit","handleChange","handleBlur","_jsxs","_Fragment","children","onSubmit","_jsx","type","name","value","onChange","onBlur","placeholder","Link","to","Object","freeze","colors","primaryWhite","primaryBlack","primaryBlue","secondaryGray","secondaryRed","secondaryBlue","secondaryOrange","secondaryGrayBlue","fonts","body","fontSizes","mainTitle","subtitle","listTitle","text","info","fontWeights","bold","medium","regular","lineHeights","shadows","normalButton","hoverButton","statsFrame","userModal","normaFrame","wrapper","border","normal","secondary","radii","round"],"sourceRoot":""}